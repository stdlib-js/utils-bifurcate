// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-index-of@esm/index.mjs";var i=e,o=n,u=s,l=t,a=["values","indices","*"];var m=r,d=t,h=function(r,t){return i(t)?o(t,"returns")&&(r.returns=t.returns,-1===u(a,r.returns))?new TypeError(l('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"returns",a.join('", "'),r.returns)):null:new TypeError(l("invalid argument. Options argument must be an object. Value: `%s`.",t))},p=function(r,t){var e,n,s;if(0===(n=r.length))return[];for(e=[[],[]],s=0;s<n;s++)t[s]?e[0].push(r[s]):e[1].push(r[s]);return e},f=function(r,t){var e,n,s;if(0===(n=r.length))return[];for(e=[[],[]],s=0;s<n;s++)t[s]?e[0].push(s):e[1].push(s);return e},g=function(r,t){var e,n,s;if(0===(n=r.length))return[];for(e=[[],[]],s=0;s<n;s++)t[s]?e[0].push([s,r[s]]):e[1].push([s,r[s]]);return e};var c=function(r,t,e){var n,s,i;if(!m(r))throw new TypeError(d("invalid argument. First argument must be a collection. Value: `%s`.",r));if(n={returns:"values"},2===arguments.length)i=t;else{if(s=h(n,t))throw s;i=e}if(!m(i))throw new TypeError(d("invalid argument. Last argument must be a collection. Value: `%s`.",i));if(r.length!==i.length)throw new RangeError("invalid arguments. First and last arguments must be the same length.");return"values"===n.returns?p(r,i):"indices"===n.returns?f(r,i):g(r,i)};export{c as default};
//# sourceMappingURL=index.mjs.map
