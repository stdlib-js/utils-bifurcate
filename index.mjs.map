{"version":3,"file":"index.mjs","sources":["../lib/validate.js","../lib/return_pairs.js","../lib/bifurcate.js","../lib/return_values.js","../lib/return_indices.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar indexOf = require( '@stdlib/utils-index-of' );\nvar format = require( '@stdlib/string-format' );\n\n\n// VARIABLES //\n\nvar returns = [ 'values', 'indices', '*' ];\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.returns] - output format\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'returns': '*'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'returns' ) ) {\n\t\topts.returns = options.returns;\n\t\tif ( indexOf( returns, opts.returns ) === -1 ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'returns', returns.join( '\", \"' ), opts.returns ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Splits values into two groups and outputs index-element pairs.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Collection} filter - collection indicating which group an element in the input collection belongs to\n* @returns {(Array|Array<Array>)} results\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var out = bifurcate( arr, filter );\n* // returns [ [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], [ [ 2, 'foo' ] ] ]\n*/\nfunction bifurcate( collection, filter ) {\n\tvar out;\n\tvar len;\n\tvar i;\n\tlen = collection.length;\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( filter[ i ] ) {\n\t\t\tout[ 0 ].push( [ i, collection[ i ] ] );\n\t\t} else {\n\t\t\tout[ 1 ].push( [ i, collection[ i ] ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = bifurcate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( '@stdlib/assert-is-collection' );\nvar format = require( '@stdlib/string-format' );\nvar validate = require( './validate.js' );\nvar returnValues = require( './return_values.js' );\nvar returnIndices = require( './return_indices.js' );\nvar returnPairs = require( './return_pairs.js' );\n\n\n// MAIN //\n\n/**\n* Splits values into two groups.\n*\n* @param {Collection} collection - input collection\n* @param {Options} [options] - function options\n* @param {string} [options.returns=\"values\"] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Collection} filter - collection indicating which group an element in the input collection belongs to\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} last argument must be a collection\n* @throws {RangeError} first and last arguments must be the same length\n* @returns {(Array|ArrayArray)} results\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var out = bifurcate( arr, filter );\n* // returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var opts = {\n*     'returns': 'indices'\n* };\n*\n* var out = bifurcate( arr, opts, filter );\n* // returns [ [ 0, 1, 3 ], [ 2 ] ]\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var opts = {\n*     'returns': '*'\n* };\n*\n* var out = bifurcate( arr, opts, filter );\n* // returns [ [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], [ [ 2, 'foo' ] ] ]\n*/\nfunction bifurcate( collection, options, filter ) {\n\tvar opts;\n\tvar err;\n\tvar f;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\topts = {\n\t\t'returns': 'values'\n\t};\n\tif ( arguments.length === 2 ) {\n\t\tf = options;\n\t} else {\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tf = filter;\n\t}\n\tif ( !isCollection( f ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a collection. Value: `%s`.', f ) );\n\t}\n\tif ( collection.length !== f.length ) {\n\t\tthrow new RangeError( 'invalid arguments. First and last arguments must be the same length.' );\n\t}\n\tif ( opts.returns === 'values' ) {\n\t\treturn returnValues( collection, f );\n\t}\n\tif ( opts.returns === 'indices' ) {\n\t\treturn returnIndices( collection, f );\n\t}\n\treturn returnPairs( collection, f );\n}\n\n\n// EXPORTS //\n\nmodule.exports = bifurcate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Splits values into two groups and outputs element values.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Collection} filter - collection indicating which group an element in the input collection belongs to\n* @returns {(Array|Array<Array>)} results\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var out = bifurcate( arr, filter );\n* // returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*/\nfunction bifurcate( collection, filter ) {\n\tvar out;\n\tvar len;\n\tvar i;\n\tlen = collection.length;\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( filter[ i ] ) {\n\t\t\tout[ 0 ].push( collection[ i ] );\n\t\t} else {\n\t\t\tout[ 1 ].push( collection[ i ] );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = bifurcate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Splits values into two groups and outputs element indices.\n*\n* @private\n* @param {Collection} collection - input collection\n* @param {Collection} filter - collection indicating which group an element in the input collection belongs to\n* @returns {(Array|Array<Array>)} results\n*\n* @example\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var out = bifurcate( arr, filter );\n* // returns [ [ 0, 1, 3 ], [ 2 ] ]\n*/\nfunction bifurcate( collection, filter ) {\n\tvar out;\n\tvar len;\n\tvar i;\n\tlen = collection.length;\n\tif ( len === 0 ) {\n\t\treturn [];\n\t}\n\tout = [ [], [] ];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tif ( filter[ i ] ) {\n\t\t\tout[ 0 ].push( i );\n\t\t} else {\n\t\t\tout[ 1 ].push( i );\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = bifurcate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Split values into two groups.\n*\n* @module @stdlib/utils-bifurcate\n*\n* @example\n* var bifurcate = require( '@stdlib/utils-bifurcate' );\n*\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var out = bifurcate( arr, filter );\n* // returns [ [ 'beep', 'boop', 'bar' ], [ 'foo' ] ]\n*\n* @example\n* var bifurcate = require( '@stdlib/utils-bifurcate' );\n*\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var opts = {\n*     'returns': 'indices'\n* };\n*\n* var out = bifurcate( arr, opts, filter );\n* // returns [ [ 0, 1, 3 ], [ 2 ] ]\n*\n* @example\n* var bifurcate = require( '@stdlib/utils-bifurcate' );\n*\n* var arr = [ 'beep', 'boop', 'foo', 'bar' ];\n* var filter = [ true, true, false, true ];\n*\n* var opts = {\n*     'returns': '*'\n* };\n*\n* var out = bifurcate( arr, opts, filter );\n* // returns [ [ [ 0, 'beep' ], [ 1, 'boop' ], [ 3, 'bar' ] ], [ [ 2, 'foo' ] ] ]\n*/\n\n// MODULES //\n\nvar bifurcate = require( './bifurcate.js' );\n\n\n// EXPORTS //\n\nmodule.exports = bifurcate;\n"],"names":["isObject","require$$0","hasOwnProp","require$$1","indexOf","require$$2","format","require$$3","returns","isCollection","validate","opts","options","TypeError","join","returnValues","collection","filter","out","len","i","length","push","returnIndices","returnPairs","lib","err","f","arguments","RangeError"],"mappings":";;gbAsBA,IAAIA,EAAWC,EACXC,EAAaC,EACbC,EAAUC,EACVC,EAASC,EAKTC,EAAU,CAAE,SAAU,UAAW,KC6BrC,ICrCIC,EAAeR,EACfK,EAASH,EACTO,EF8BJ,SAAmBC,EAAMC,GACxB,OAAMZ,EAAUY,GAGXV,EAAYU,EAAS,aACzBD,EAAKH,QAAUI,EAAQJ,SACoB,IAAtCJ,EAASI,EAASG,EAAKH,UACpB,IAAIK,UAAWP,EAAQ,gFAAiF,UAAWE,EAAQM,KAAM,QAAUH,EAAKH,UAGlJ,KARC,IAAIK,UAAWP,EAAQ,qEAAsEM,KE/BlGG,ECYJ,SAAoBC,EAAYC,GAC/B,IAAIC,EACAC,EACAC,EAEJ,GAAa,KADbD,EAAMH,EAAWK,QAEhB,MAAO,GAGR,IADAH,EAAM,CAAE,GAAI,IACNE,EAAI,EAAGA,EAAID,EAAKC,IAChBH,EAAQG,GACZF,EAAK,GAAII,KAAMN,EAAYI,IAE3BF,EAAK,GAAII,KAAMN,EAAYI,IAG7B,OAAOF,GD3BJK,EEWJ,SAAoBP,EAAYC,GAC/B,IAAIC,EACAC,EACAC,EAEJ,GAAa,KADbD,EAAMH,EAAWK,QAEhB,MAAO,GAGR,IADAH,EAAM,CAAE,GAAI,IACNE,EAAI,EAAGA,EAAID,EAAKC,IAChBH,EAAQG,GACZF,EAAK,GAAII,KAAMF,GAEfF,EAAK,GAAII,KAAMF,GAGjB,OAAOF,GF1BJM,EDUJ,SAAoBR,EAAYC,GAC/B,IAAIC,EACAC,EACAC,EAEJ,GAAa,KADbD,EAAMH,EAAWK,QAEhB,MAAO,GAGR,IADAH,EAAM,CAAE,GAAI,IACNE,EAAI,EAAGA,EAAID,EAAKC,IAChBH,EAAQG,GACZF,EAAK,GAAII,KAAM,CAAEF,EAAGJ,EAAYI,KAEhCF,EAAK,GAAII,KAAM,CAAEF,EAAGJ,EAAYI,KAGlC,OAAOF,GC2DR,IG5CAO,EHOA,SAAoBT,EAAYJ,EAASK,GACxC,IAAIN,EACAe,EACAC,EACJ,IAAMlB,EAAcO,GACnB,MAAM,IAAIH,UAAWP,EAAQ,sEAAuEU,IAKrG,GAHAL,EAAO,CACNH,QAAW,UAEc,IAArBoB,UAAUP,OACdM,EAAIf,MACE,CAEN,GADAc,EAAMhB,EAAUC,EAAMC,GAErB,MAAMc,EAEPC,EAAIV,EAEL,IAAMR,EAAckB,GACnB,MAAM,IAAId,UAAWP,EAAQ,qEAAsEqB,IAEpG,GAAKX,EAAWK,SAAWM,EAAEN,OAC5B,MAAM,IAAIQ,WAAY,wEAEvB,MAAsB,WAAjBlB,EAAKH,QACFO,EAAcC,EAAYW,GAEZ,YAAjBhB,EAAKH,QACFe,EAAeP,EAAYW,GAE5BH,EAAaR,EAAYW"}